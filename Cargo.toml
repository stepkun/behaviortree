# Copyright Â© 2025 Stephan Kunz
[package]
resolver = "3"
name = "behaviortree"
version = "0.4.0"
edition = "2024"
license-file = "LICENSE"
authors = ["stepkun <stephan.kunz@kabelbw.de>"]
description = "A BehaviorTree library similar to BehaviorTree.CPP (https://www.behaviortree.dev/), which can be used in embedded environments."
rust-version = "1.86.0"
repository = "https://github.com/stepkun/behaviortree.git"
homepage = "http://github.com/stepkun/behaviortree.git"
documentation = "https://docs.rs/behaviortree/"
readme = "README.md"
keywords = ["automation", "behavior", "embedded", "robots", "robotics"]
categories = ["development-tools", "science::robotics", "simulation"]
exclude = ["laze*", "benches/**", "embedded/**", "examples/**", "tests/**"]

[lib]
name = "behaviortree"

[lints.rust]
missing_docs = "warn"
unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(context, values(any()))',
] }
unsafe_code = "warn"
unused_must_use = "warn"

[lints.rustdoc]
private_intra_doc_links = "allow"

[lints.clippy]
enum_glob_use = "deny"
expect_used = "deny"
nursery = { level = "deny", priority = -1 }
panic = "deny"
pedantic = { level = "deny", priority = -1 }
unwrap_used = "deny"

[[bench]]
name = "factory"
harness = false

[[bench]]
name = "fallback"
harness = false

[[bench]]
name = "parallel"
harness = false

[[bench]]
name = "sequence"
harness = false

[[bench]]
name = "tree"
harness = false

[dependencies]
#ariel-os = { path = "./build/imports/ariel-os/src/ariel-os", features = [
#    "time",
#] }
#ariel-os-boards = { path = "./build/imports/ariel-os/src/ariel-os-boards" }
behaviortree-derive = { path = "derive", version = "0.3" }
async-trait = { version = "0.1.88", default-features = false }
bytes = { version = "1", default-features = false }
libloading = { version = "0.8.8", default-features = false, optional = true }
nanoserde = { version = "0.2.1", default-features = false, features = ["json"] }
rand = { version = "0.9.2", optional = true }
roxmltree = { version = "0.20.0", default-features = false, features = [
    "positions",
] }
spin = { version = "0.10.0", default-features = false, features = [
    "mutex",
    "rwlock",
    "use_ticket_mutex",
] } # spin_mutex??
thiserror = { version = "2", default-features = false }
#tinyscript = { path = "../tinyscript", version = "^0.3.1", default-features = false }
tinyscript = { version = "^0.3.1", default-features = false }
tokio = { version = "1.47.1", features = [
    "rt-multi-thread",
    "macros",
    "sync",
    "time",
], optional = true }
tracing = { version = "0.1.41", default-features = false, features = [
    "attributes",
] }
uuid = { version = "1.18.0", default-features = false, features = [
    "v4",
], optional = true }
#woxml = { path = "../woxml", version = "0.4.1", default-features = false }
woxml = { version = "0.4.1", default-features = false }
zeromq = { version = "0.4.1", default-features = false, features = [
    "tcp-transport",
], optional = true }

[build-dependencies]

[dev-dependencies]
criterion = "0.7.0"
doc-comment = "0.3.3"
rstest = "0.26.1"
trybuild = { version = "1.0.110", features = ["diff"] }

[features]
default = ["std"]
std = [
    "libloading",
    "roxmltree/std",
    "rand",
    "tinyscript/std",
    "tokio",
    "uuid",
    "woxml/std",
    "zeromq",
    "zeromq/tokio-runtime",
]

[profile.release]
opt-level = 's'        # Optimize for size.
lto = true             # Enable Link Time Optimisation
codegen-units = 1      # Reduced to increase optimisations
overflow-checks = true # useful

[profile.production]
inherits = "release"
panic = 'abort'      # Abort on panic
strip = "symbols"    # Strip symbols from binary

[profile.samply]
inherits = "release"
debug = true         # Create debug symbols for profiling
